# =========================================================================
# Basics
# =========================================================================

# Change prefix
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# Change between panes
bind-key C-M-h select-pane -L
bind-key C-M-j select-pane -D
bind-key C-M-k select-pane -U
bind-key C-M-l select-pane -R

# Source config file
bind-key + source-file ~/.tmux.conf

# Toggle last window like screen
# bind-key C-a last-window

# Maximize/un-maximize windows ('zooming')
unbind-key u
bind-key u new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
unbind-key i
bind-key i last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

# Toggle statusbar
bind-key b set-option status

# Ctrl+left/right cycles through windows
bind-key -n C-right next
bind-key -n C-left prev

# Open a man page in new window
bind / command-prompt -p "Manpage for: "  "split-window -h 'exec man %%'"

# Quick view of processes
bind '~' split-window "exec htop"

# Listen for activity on all windows
set -g bell-action any

# On-screen time for display-panes in ms
set -g display-panes-time 2000

# Enable wm window titles
set -g set-titles on

# Inspect a process
# bind * command-prompt -p "Inspect process: " "new-window 'htop'; split-window -h 'ps aux | grep "%%" | less'"
# bind * command-prompt -p "Inspect process: " "new-window 'htop'; split-window -h 'bash'"
# bind * command-prompt -p "Inspect process: " "new-window 'htop'; split-window -h '(echo "ls" && cat) | $SHELL -i'"
# bind * command-prompt -p "Inspect process: " "new-window 'htop'; split-window -h '$SHELL -i'; send-keys 'ls\n'"

# # Working 'send-keys based' solution
# bind * command-prompt -p "Inspect process: " "new-window 'htop'; split-window -h '$SHELL -i'; send-keys 'ps aux | grep "%%" | less\n'"

# Shell scripting based solution
# bind * command-prompt -p "Inspect process: " "new-window 'htop'; split-window -h './.tmux/scripts/inspectProcess.sh %%'"
bind * command-prompt -p "Inspect process: " "new-window 'htop'; split-window -h './.tmux/scripts/inspectProcess.sh %%'"

# Test
bind ( command-prompt -p "Left pane: ","Right pane: " -I "more","less" "new-window 'man %%'; split-window -h 'exec man %2';"

# Python scripting test
# bind-key ) ./.tmux/scripts/splitter.py
# bind-key ) new-window "$SHELL -i ./.tmux/scripts/splitter.sh"
# bind-key ) new-window "$SHELL -i './.tmux/scripts/splitter.sh'"
bind-key ) run-shell "$SHELL .tmux/scripts/splitter.sh"

# Switch current-pane and main-pane
# (Only main-* layouts have a main-pane)
bind-key < swap-pane -s 0
bind-key > last-pane\; swap-pane -s 0\; last-pane

# =========================================================================
# Statusbar
# =========================================================================

# Statusbar message display time
set -g display-time 2000

# Default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr default

# Default window title colors
set-window-option -g window-status-fg cyan
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# Active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# Command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Center align the window list
set -g status-justify centre

# sxhow some useful stats but only when tmux is started
# outside of Xorg, otherwise dwm statusbar shows these already
set -g status-right ""
set -g status-left ""
if '[ -z "$DISPLAY" ]' 'set -g status-left "[#[fg=green] #H #[default]]"'
if '[ -z "$DISPLAY" ]' 'set -g status-right "[ #[fg=magenta]#(cat /proc/loadavg | cut -d \" \" -f 1,2,3)#[default] ][ #[fg=cyan,bright]%a %Y-%m-%d %H:%M #[default]]"'
if '[ -z "$DISPLAY" ]' 'set -g status-right-length 50'
